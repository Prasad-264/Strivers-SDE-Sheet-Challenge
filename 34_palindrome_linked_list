#include <bits/stdc++.h> 
/****************************************************************

    Following is the class structure of the LinkedListNode class:

    template <typename T>
    class LinkedListNode
    {
    public:
        T data;
        LinkedListNode<T> *next;
        LinkedListNode(T data)
        {
            this->data = data;
            this->next = NULL;
        }
    };

*****************************************************************/
LinkedListNode<int>* getMid(LinkedListNode<int>* head) {
    LinkedListNode<int> *slow = head;
    LinkedListNode<int> *fast = head;
    while(fast != NULL && fast->next != NULL) {
        slow = slow->next;
        fast = fast->next->next;
    }
    return slow;
}

LinkedListNode<int>* reverseList(LinkedListNode<int>* head) {
    LinkedListNode<int>* cur = head;
    LinkedListNode<int>* prev = NULL;
    LinkedListNode<int>* temp = NULL;

    while(cur != NULL) {
        temp = cur->next;
        cur->next = prev;
        prev = cur;
        cur = temp;
    }
    return prev;
}

bool isPalindrome(LinkedListNode<int> *head) {
    if(head == NULL) return true;

    LinkedListNode<int>* mid = getMid(head);
    LinkedListNode<int>* reverse = reverseList(mid);

    LinkedListNode<int>* p1 = head;
    LinkedListNode<int>* p2 = reverse;

    while(p2 != NULL) {
        if(p1->data != p2->data) {
            return false;
        }
        p1 = p1->next;
        p2 = p2->next;
    }
    return true;
}