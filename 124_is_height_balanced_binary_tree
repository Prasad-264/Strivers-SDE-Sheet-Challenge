#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/
int balance(BinaryTreeNode<int>* root, bool &flag) {
    if(root == NULL) return 0;

    int lh = balance(root->left, flag);
    int rh = balance(root->right, flag);

    if(abs(lh - rh) > 1) flag = false;

    return 1 + max(lh, rh);
}

bool isBalancedBT(BinaryTreeNode<int>* root) {
    if(root == NULL) return true;
    bool flag = true;
    balance(root, flag);

    return flag;
}



// Strivers solution

class Solution {

public:
    bool isBalanced(TreeNode* root) {
        return dfsHeight (root) != -1;
    }

    int dfsHeight (TreeNode *root) {

        if (root == NULL) return 0;
        
        int leftHeight = dfsHeight (root -> left);

        if (leftHeight == -1) 
            return -1;
        
        int rightHeight = dfsHeight (root -> right);

        if (rightHeight == -1) 
            return -1;
        
        if (abs(leftHeight - rightHeight) > 1)  
            return -1;

        return max (leftHeight, rightHeight) + 1;
    }
};