/*****************************************************

    Following is the Binary Tree node structure:
    
    class BinaryTreeNode {
        public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
        
        ~BinaryTreeNode() {
            if(left) 
                delete left;
            if(right) 
                delete right;
        }
    };

******************************************************/
bool isSame(BinaryTreeNode<int>* root1, BinaryTreeNode<int>* root2) {
    if(root1 == NULL && root2 == NULL) return true;
    if(root1 == NULL || root2 == NULL) return false;

    bool lefttree = isSame(root1->left, root2->right);
    bool righttree = isSame(root1->right, root2->left);

    return (root1->data == root2->data) && lefttree && righttree;
}

bool isSymmetric(BinaryTreeNode<int>* root) {
    if(root == NULL) return true;

    return isSame(root->left, root->right);
}