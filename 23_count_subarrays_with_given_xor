// Brute force

#include <bits/stdc++.h>

int subarraysXor(vector<int> &arr, int x) {
    int n = arr.size();
    int cnt = 0;
    for(int i=0; i<n; i++) {
        for(int j=i; j<n; j++) {
            int xorr = 0;
            for(int k=i; k<=j; k++) {
                xorr ^= arr[k];
            }
            if(xorr == x) cnt++;
        }
    }
    return cnt;
}


// Optimal Solution

#include <bits/stdc++.h>

int subarraysXor(vector<int> &arr, int k) {
    int n = arr.size();
    int xr = 0;
    map<int, int> mpp; //declaring the map.
    mpp[xr]++; //setting the value of 0.
    int cnt = 0;

    for (int i = 0; i < n; i++) {
        // prefix XOR till index i:
        xr = xr ^ arr[i];

        //By formula: x = xr^k:
        int x = xr ^ k;

        // add the occurrence of xr^k
        // to the count:
        cnt += mpp[x];

        // Insert the prefix xor till index i
        // into the map:
        mpp[xr]++;
    }
    return cnt;
}