#include <bits/stdc++.h> 
/************************************************************

Following is the Binary Tree node class
    
template <typename T = int>
class TreeNode
{
public:
    T data;
    TreeNode<T> *left;
    TreeNode<T> *right;

    TreeNode(T val)
    {
        this->data = val;
        left = NULL;
        right = NULL;
    }

    ~TreeNode()
    {
        if (left != NULL)
        {
            delete left;
        }
        if (right != NULL)
        {
            delete right;
        }
    }
};

************************************************************/

vector<int> verticalOrderTraversal(TreeNode<int> *root) {
    vector<int> ans;
    if(root == NULL) return ans;

    // mp -> {line no, [list of nodes of this line]}
    map<int, vector<int>> mp;

    // q -> {node, line no}
    queue<pair<TreeNode<int>*, int>> q;
    q.push({root, 0});

    while(!q.empty()) {
        auto it = q.front();
        q.pop();

        TreeNode<int>* node = it.first;
        int line = it.second;

        mp[line].push_back(node->data);

        if(node->left) q.push({node->left, line-1});
        if(node->right) q.push({node->right, line+1});
    }

    for(auto it : mp) {
        vector<int> temp = it.second;
        for(auto i : temp) {
            ans.push_back(i);
        }
    }
    return ans;
}