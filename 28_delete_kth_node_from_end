// Brute Force

Node* removeKthNode(Node* head, int K) {
    Node* temp = head;
    int n = 0;
    while(temp != NULL) {
        n++;
        temp = temp->next;
    }

    int t = n - K;
    int cnt = 0;

    temp = head;
    while(cnt < t) {
        temp = temp->next;
        cnt++;
    }
    if(temp->next != NULL) {
        temp->next = temp->next->next;
    }
    return head;
}

// Optimal Solution

Node* removeKthNode(Node* head, int K) {
    Node* start = new Node();
    start->next = head;
    Node* slow = start;
    Node* fast = start;

    for(int i=0; i<=K; i++) {
        fast = fast->next;
    }

    while(fast != NULL) {
        slow = slow->next;
        fast = fast->next;
    }

    if(slow->next != NULL) {
        slow->next = slow->next->next;
    }

    return start->next;
}