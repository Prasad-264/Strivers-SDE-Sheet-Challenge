#include <bits/stdc++.h> 
static bool comp(pair<int, int>& a, pair<int, int>& b) {
    double r1 = (double) a.second / (double) a.first;
    double r2 = (double) b.second / (double) b.first;
    return r1 > r2;
}

double maximumValue (vector<pair<int, int>>& items, int n, int w) {
    // Write your code here.
    // ITEMS contains {weight, value} pairs.

    sort(items.begin(), items.end(), comp);

    double ans = 0.0;
    int curw = 0;
    for(int i=0; i<n; i++) {
        int value = items[i].second;
        int weight = items[i].first;

        if(curw + weight <= w) {
            curw += weight;
            ans += (double) value;
        }
        else {
            int remain = w - curw;
            ans +=  (value/ (double) weight)* (double) remain;
            break;
        }
    }
    return ans;
}