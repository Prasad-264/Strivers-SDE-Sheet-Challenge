#include <bits/stdc++.h> 


// not connected components

void bfs(int root, vector<int> adj[], vector<int>& vis, vector<int> &ans) {
    vis[root] = 1;
    queue<int> q;
    q.push(root);
    while(!q.empty()) {
        int node = q.front();
        q.pop();

        ans.push_back(node);

        for(auto it : adj[node]) {
            if(!vis[it]) {
                vis[it] = 1;
                q.push(it);
            }
        }
    }
}

vector<int> BFS(int V, vector<pair<int, int>> edges) {
    vector<int> adj[V];
    for(auto it : edges) {
        int u = it.first;
        int v = it.second;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    
    for(int i =0; i<V; i++) {
        sort( adj[i].begin() , adj[i].end() ) ;
    }

    vector<int> ans;
    vector<int> vis(V+1, 0);
    for(int i=0; i<V; i++) {
        if(!vis[i]) {
            bfs(i, adj, vis, ans);
        }
    }
    
    return ans;
}