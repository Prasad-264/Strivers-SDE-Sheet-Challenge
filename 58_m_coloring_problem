#include <bits/stdc++.h> 

bool isPossible(vector<vector<int>> &mat, int node, vector<int>& color, int col, int n) {
    for(int i=0; i<n; i++) {
        if(mat[node][i] == 1) {
            if(color[i] == col) {
                return false;
            }
        }
    }
    color[node] = col;
    return true;
}

bool solve(int node, int n, int m, vector<int>& color, vector<vector<int>> &mat) {
    if(node == n) {
        return true;
    }
    for(int i=1; i<=m; i++) {
        if(isPossible(mat, node, color, i, n)) {
            if(solve(node+1, n, m, color, mat)) {
                return true;
            }
            color[node] = 0;
        }
    }
    return false;
}

string graphColoring(vector<vector<int>> &mat, int m) {
    int n = mat.size();
    vector<int> color(n, 0);
    if(solve(0, n, m, color, mat)) {
        return "YES";
    }
    return "NO";
}